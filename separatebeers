#!/bin/bash

find beer -name "*.xml" | awk '{print tolower($1)" "$1}' | sed -e 's/^beer\///' > lowercase_beerdocs_list

if [ ! -d .tmp ]; then
	mkdir .tmp
fi

while read beer_id ; do
	# echo $beer_id

	# Need to find out if this beer file already exists and do it with a case-insensitive search because Mac OS X's file system is case-insensitive
	
	brewery_id=${beer_id%%/*}
	# echo $(echo $beer_id|tr [A-Z] [a-z])=$(echo $brewery_id|tr [A-Z] [a-z])

	if [ ! -d "beer/$brewery_id" ]; then
		mkdir "beer/$brewery_id";
	fi
	
	xml sel -t -m "/beers/beer[@id=&quot;$beer_id&quot;]" -c . $1 | xml fo - > .tmp/beer.xml

	if grep $(echo $beer_id|tr [A-Z] [a-z]).xml lowercase_beerdocs_list > .tmp/existing_file; then
		thismd5=$(md5sum .tmp/beer.xml | awk '{print $1}')
		thatfile=$(cat .tmp/existing_file | awk '{print $2}')
		thatmd5=$(md5sum $thatfile | awk '{print $1}')
		# echo $thismd5 $thismd5;
		
		if [[ "$thismd5" != "$thatmd5" ]]; then
			echo $beer_id already exists \($thatfile\) and is different;
			# diff -u $thatfile .tmp/beer.xml;
		# else
		# 	echo $beer_id is old
		fi
	else
		echo beer/$beer_id.xml is new
	fi
	
	mv .tmp/beer.xml beer/$beer_id.xml;
	
done < <(xml sel -t -m '/beers/beer' -v '@id' -n $1 | sed -e '/^\s*$/d')

rm -f lowercase_beerdocs_list 
rm -rf .tmp/
